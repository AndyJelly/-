一、基础概念
1、索引使用SELECT查询和WHERE子句加速数据输出，但是会减慢使用INSERT和UPDATE语句输入的数据。

2、还可以创建一个唯一索引，类似于唯一约束，该索引防止列或列的组合上有一个索引重复的项。当前，只有B-tree能够被声明为唯一。
CREATE UNIQUE INDEX index_name  
on table_name (column_name);
当一个索引被声明为唯一时，索引中不允许多个表行具有相同的索引值。空值被视为不相同。
PostgreSQL会自动为定义了一个唯一约束或主键的表创建一个唯一索引。不需要手工在唯一列上创建索引，如果那样做也只是重复了自动创建的索引而已。

3、PostgreSQL中有几种索引类型，如B-tree，Hash，GiST，SP-GiST和GIN等。每种索引类型根据不同的查询使用不同的算法。 默认情况下，CREATE INDEX命令使用B树索引。PostgreSQL中有几种索引类型，如B-tree，Hash，GiST，SP-GiST和GIN等。每种索引类型根据不同的查询使用不同的算法。 默认情况下，CREATE INDEX命令使用B树索引。
CREATE INDEX name ON table USING HASH (column);

4、一个索引可以定义在表的多个列上，目前，只有 B-tree、GiST、GIN 和 BRIN 索引类型支持多列索引，最多可以指定32个列（该限制可以在源代码文件pg_config_manual.h中修改，但是修改后需要重新编译PostgreSQL）。

5、一个索引在每一个索引列上只能支持一种排序规则。如果需要多种排序规则，你可能需要多个索引。


索引的开销：
1、一个索引被创建后，系统必须保持它与表同步。这增加了数据操作的负担。因此那些很少或从不在查询中使用的索引应该被移除。
一旦一个索引被创建，就不再需要进一步的干预：系统会在表更新时更新索引，而且会在它觉得使用索引比顺序扫描表效率更高时使用索引。但我们可能需要定期地运行ANALYZE命令来更新统计信息以便查询规划器能做出正确的决定

索引的优势：
1、索引也会使带有搜索条件的UPDATE和DELETE命令受益。此外索引还可以在连接搜索中使用。因此，一个定义在连接条件列上的索引可以显著地提高连接查询的速度。


